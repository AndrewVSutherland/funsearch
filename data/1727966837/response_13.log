Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This is a simple improvement over `priority_v0` and should be a small change as per your instructions.

```python
def priority_v1(k: int, n: int) -> float:
  """Returns the priority with which we want to add `k` to the Salem-Spencer set.
  n is the number of possible integers, and k is the integer we want to determine priority for.
  """
  remainders = set((k + i) % n for i in range(n))
  return len(remainders) / n
```

This version of `priority_v1` calculates the number of unique remainders when adding each integer from `0` to `n-1` to `k` and dividing by `n`. The result is a value between `0` and `1`, with higher values indicating a higher priority for adding `k` to the Salem-Spencer set.