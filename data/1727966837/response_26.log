Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by all numbers up to `n`. This is a small change from `priority_v0` and is based on the Salem-Spencer problem's focus on remainders.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`. Returns the priority based on the number of unique remainders."""
  remainders = {k % i for i in range(1, n + 1)}
  return len(remainders)
```

This version of `priority_v1` returns a higher priority for numbers that have more unique remainders when divided by numbers up to `n`. This is a small change from `priority_v0` and is a step towards improving the priority function based on the Salem-Spencer problem's focus on remainders.