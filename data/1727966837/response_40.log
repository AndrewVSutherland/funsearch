Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`, and the number of multiples of `k` less than `n`. This version is shorter and makes small changes to the previous version.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set(k % d for d in range(1, n))
  multiples = sum(1 for i in range(1, n // k + 1) if i * k < n)
  return len(remainders) + multiples
```

This version first calculates the unique remainders when dividing `k` by each number from 1 to `n-1`. Then, it counts the number of multiples of `k` less than `n`. The priority is the sum of these two values.