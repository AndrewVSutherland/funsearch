Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`, and the number of multiples of `k` within the range `[1, n]`. This version is shorter and makes small changes to the original function.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set((k * i) % n for i in range(1, n + 1))
  multiples = sum((k * i) % n == 0 for i in range(1, n + 1))
  return len(remainders) * multiples
```

This version calculates the priority as the product of the number of unique remainders and the number of multiples of `k` within the range `[1, n]`. This should provide a better estimate for the priority of adding `k` to the Salem-Spencer set compared to the original `priority_v0` function.