"""Finds large cap sets.

On every iteration, improve priority_v1 over the priority_vX methods from previous iterations.
Make only small changes.
Try to make the code short.
"""
import itertools

import numpy as np

import funsearch


@funsearch.run
def priority_v0(el: tuple[int, ...], n: int) -> float:
  """Returns the priority with which we want to add `element` to the cap set.
  el is a tuple of length n with values 0-2.
  """
  """Improved version of `priority_v0`.
  Prioritizes tuples with more elements set to 1, as these are more likely to contribute to a large cap set.
  """
  return el.count(1) / n


def priority_v1(el: tuple[int, ...], n: int) -> float:
  """Improved version of `priority_v0`."""

