```python
import itertools
import numpy as np

import funsearch

@funsearch.run
def priority_v0(k: int, n: int) -> float:
  """Returns the priority with which we want to add `element` to the salem-spencer set.
  n is the number of possible integers, and k is the integer we want to determine priority for.
  """
  return k / n

def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`.
  Priority is now inversely proportional to the square root of k. This is to give more weight to smaller numbers.
  """
  return n / np.sqrt(k)

def priority_v2(k: int, n: int) -> float:
  """Improved version of `priority_v1`.
  Priority is now modified to consider the ratio of k to the total number of possible integers n.
  This gives more weight to numbers that are closer to the average of the possible integers.
  """
  return (n / np.sqrt(k)) * (1 - abs(k - n/2) / (n/2))
```