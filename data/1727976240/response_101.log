@funsearch.run
def priority_v2(k: int, n: int) -> float:
  """Improved version of `priority_v1`."""
  # Add a small bias to favor smaller numbers
  return k / (n + 1)


def priority_v3(k: int, n: int) -> float:
  """Improved version of `priority_v2`."""
  # Add a larger bias to favor smaller numbers
  return k / (n + 10)


def priority_v4(k: int, n: int) -> float:
  """Improved version of `priority_v3`."""
  # Add a decay factor to prioritize smaller numbers more
  return k / np.sqrt(n + 10)


def priority_v5(k: int, n: int) -> float:
  """Improved version of `priority_v4`."""
  # Add a penalty for larger numbers
  return k / (np.sqrt(n + 10) + 0.1 * n)