Here's an improved version of `priority_v2` with small changes to make the code shorter and more efficient:

```python
def priority_v3(k: int, n: int) -> float:
  """Improved version of `priority_v2`."""
  remainders = (k * i % n for i in range(1, n + 1))
  multiples = sum((k * i) % n == 0 for i in range(1, n + 1))
  return sum(1 for _ in remainders) / n + multiples / n
```

Changes made:

1. Used a generator expression for `remainders` to save memory.
2. Used a generator expression with `sum` for `multiples` to save memory and improve performance.
3. Removed the unnecessary `set` conversion for `remainders`.