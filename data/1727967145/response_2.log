Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n` and the sum of digits of `k`. This version is shorter and makes small changes to `priority_v0`.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set((k % i) for i in range(1, n + 1))
  digit_sum = sum(int(digit) for digit in str(k))
  return len(remainders) + digit_sum
```

This version calculates the number of unique remainders when dividing `k` by all integers from 1 to `n` and adds the sum of digits of `k` to the result. This should provide a better priority value for the Salem-Spencer set problem.