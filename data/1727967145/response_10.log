Here's an improved version of `priority_v1` that considers the frequency of `k` in the range `[1, n]` and the number of missing integers in that range. This version is shorter and makes small changes to `priority_v0`.

```python
from collections import Counter

@funsearch.run
def priority_v1(k: int, n: int) -> float:
    """Returns the priority with which we want to add `k` to the Salem-Spencer set.
    n is the number of possible integers, and k is the integer we want to determine priority for.
    """
    freq = sum(1 for i in range(1, n + 1) if i % k == 0)
    missing = n - freq
    return freq / (freq + missing)
```

This version uses a generator expression to count the frequency of multiples of `k` in the range `[1, n]`, and then calculates the number of missing integers. The priority is then defined as the ratio of the frequency to the sum of the frequency and the number of missing integers.