Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This version is more concise and should provide a better priority value for the Salem-Spencer problem.

```python
from math import gcd

def priority_v1(k: int, n: int) -> float:
    """Returns the priority with which we want to add `k` to the Salem-Spencer set."""
    return -len(set((k + i * n) % n for i in range(gcd(k, n)))) / n
```

This version uses the fact that numbers in the Salem-Spencer set have unique remainders when divided by `n`. By considering the greatest common divisor (gcd) of `k` and `n`, we can reduce the number of remainders to check. The priority is then calculated as the negative number of unique remainders divided by `n`, ensuring that smaller sets of remainders have higher priority.