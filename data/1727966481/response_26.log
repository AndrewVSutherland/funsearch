Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This is a small change that builds upon `priority_v0` and should be more informative for the Salem-Spencer problem.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0` that considers the number of unique remainders."""
  remainders = set(k % i for i in range(1, n + 1))
  return len(remainders) / n
```

This version calculates the number of unique remainders when dividing `k` by all integers from 1 to `n`. It then normalizes this count by dividing it by `n`, giving a value between 0 and 1. This priority function should provide a better indication of the usefulness of `k` for the Salem-Spencer set, as elements with more unique remainders are generally more valuable.