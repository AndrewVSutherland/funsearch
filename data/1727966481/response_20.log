Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This is a small change that builds upon `priority_v0` and should be easier to understand and maintain.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`. Returns the priority based on the number of unique remainders."""
  remainders = set((k + i) % n for i in range(n))
  return len(remainders) / n
```

This version calculates the number of unique remainders when adding integers from 0 to `n-1` to `k` and dividing by `n`. The priority is then the ratio of unique remainders to `n`. This should give a higher priority to numbers that have more unique remainders, as they are more likely to help grow the Salem-Spencer set.

To further improve the function, you could consider adding more features, such as the number of distinct factors of `k`, or the number of distinct prime factors of `k`. However, keep in mind the constraint to make only small changes and keep the code short.