Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`, as well as the number of multiples of `k` within `n`. This version is shorter and makes small changes to improve the priority function.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set((k % i) for i in range(1, n + 1))
  multiples = sum(1 for i in range(1, n + 1) if i % k == 0)
  return len(remainders) + multiples
```

This version first calculates the unique remainders when dividing `k` by all integers from 1 to `n`. Then, it counts the number of multiples of `k` within the range. The priority is the sum of these two values, which should provide a better indication of how useful `k` is for the Salem-Spencer set.