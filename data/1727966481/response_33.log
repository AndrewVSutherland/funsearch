Here's an improved version of `priority_v1` that considers the count of multiples of `k` up to `n` and the distance from `k` to the nearest multiple of `n`. This version is more concise and makes small changes to `priority_v0`.

```python
import math

def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`.

  Returns the priority with which we want to add `k` to the Salem-Spencer set.
  `n` is the number of possible integers, and `k` is the integer we want to determine priority for.
  """
  # Count of multiples of k up to n
  count = n // k

  # Distance from k to the nearest multiple of n
  distance = min(k - (n // k) * k, n - (n // k) * k)

  # Priority calculation: consider count and distance
  return count / (distance + 1)
```

This version of `priority_v1` should provide a better estimate for the priority of adding `k` to the Salem-Spencer set compared to `priority_v0`. The priority is higher for integers with more multiples up to `n` and closer to the nearest multiple of `n`.