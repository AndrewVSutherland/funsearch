Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n` and the number of multiples of `k` less than `n`. This version is more concise and only makes small changes to the original function.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set((k + i) % n for i in range(n))
  multiples = sum(1 for i in range(n) if i % k == 0)
  return len(remainders) * multiples
```

This version calculates the set of unique remainders when dividing `k + i` by `n` for `i` in the range `[0, n)`. It also counts the number of multiples of `k` less than `n`. The priority is then calculated as the product of the number of unique remainders and the number of multiples of `k`. This should provide a better estimate for the priority of adding `k` to the Salem-Spencer set.