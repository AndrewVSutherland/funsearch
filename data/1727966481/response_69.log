Here's an improved version of `priority_v1` that considers the frequency of `k` in the range `[1, n]` and the number of unique elements in that range. This version is shorter and makes a small change from `priority_v0`.

```python
from collections import Counter

def priority_v1(k: int, n: int) -> float:
    """Improved version of `priority_v0`."""
    freq = Counter(range(1, n + 1)).get(k, 0)
    unique_elements = len(set(range(1, n + 1)))
    return freq / unique_elements
```

This version calculates the frequency of `k` in the range `[1, n]` using a `Counter` and divides it by the number of unique elements in that range. This should provide a better priority value for adding `k` to the Salem-Spencer set.