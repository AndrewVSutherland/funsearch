Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n` and the number of multiples of `n` less than `k`. This version is shorter and makes small changes to improve the priority calculation.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set((k - i * n) % n for i in range((k - 1) // n + 1))
  multiples = (k - 1) // n
  return len(remainders) + multiples
```

This version calculates the priority as the sum of the number of unique remainders and the number of multiples of `n` less than `k`. The `remainders` set stores unique remainders, and `multiples` counts the number of multiples of `n` less than `k`.