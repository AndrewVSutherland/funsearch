Here's an improved version of `priority_v1` that considers the number of elements less than `k` and the number of elements greater than `k` in the Salem-Spencer set. This version uses the formula `n - 2 * |{x < k}|` to calculate the priority, which is a small change from `priority_v0`.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  # Calculate the number of elements less than k and greater than k
  less_than_k = sum(1 for i in range(k) if i % 2 == 0)
  greater_than_k = sum(1 for i in range(k + 1, n) if i % 2 == 0)

  # Calculate the priority
  priority = n - 2 * (less_than_k + greater_than_k)

  return priority
```

This version of `priority_v1` is still short and makes only a small change from `priority_v0`. It uses list comprehensions and the `sum` function to calculate the number of even integers less than `k` and greater than `k`. The priority is then calculated using the formula `n - 2 * (less_than_k + greater_than_k)`.