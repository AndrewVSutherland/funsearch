Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This is a small change from `priority_v0` and should help improve the priority function. I've also added some type hints and docstring improvements.

```python
from typing import List

def priority_v1(k: int, n: int) -> float:
  """
  Returns the priority with which we want to add `k` to the Salem-Spencer set.
  n is the number of possible integers, and k is the integer we want to determine priority for.
  This version considers the number of unique remainders when dividing `k` by `n`.
  """
  remainders = set(k % i for i in range(1, n + 1))
  return len(remainders) / n
```

This version of `priority_v1` calculates the number of unique remainders when dividing `k` by all integers from 1 to `n` (inclusive). It then returns this count divided by `n`, giving a priority value between 0 and 1. The larger the number of unique remainders, the higher the priority.