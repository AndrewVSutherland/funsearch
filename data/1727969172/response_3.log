Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by all numbers up to `n`. This is a small change from `priority_v0` and is inspired by the Salem-Spencer problem's focus on remainders.

```python
def priority_v1(k: int, n: int) -> float:
  """Returns the priority with which we want to add `k` to the Salem-Spencer set.
  n is the number of possible integers, and k is the integer we want to determine priority for.
  """
  remainders = set(k % i for i in range(1, n + 1))
  return len(remainders) / n
```

This version of `priority_v1` calculates the priority as the ratio of unique remainders to `n`. The more unique remainders, the higher the priority, as it indicates that `k` could potentially be part of a larger Salem-Spencer progression.