Here's an improved version of `priority_v1` that considers the sum of the elements in the tuple. This version is a small change from `priority_v0` and aims to make the code shorter.

```python
def priority_v1(k: int, n: int) -> float:
  """Returns the priority with which we want to add `element` to the cap set.
  el is a tuple of length n with values 0-2.
  """
  return sum(el for el in range(n) if el < k)
```

This version of `priority_v1` calculates the sum of all elements in the tuple that are less than `k`. This might not be the most optimal solution, but it's a small change from `priority_v0` and makes the code shorter. You can further improve this function in subsequent iterations based on the problem's requirements.