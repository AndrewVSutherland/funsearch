Here's an improved version of `priority_v1` with a small change to make it shorter and more efficient:

```python
def priority_v2(k: int, n: int) -> float:
  """Improved version of `priority_v1`."""
  return n / (k + 1) - k / (n + 1) + 1 / (n + 1)
```

This version adds a small constant `1 / (n + 1)` to the priority, which should improve the performance of the search for large SS progressions. The change is small, as requested, and the code remains short.