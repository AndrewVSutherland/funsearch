Here's an improved version of `priority_v2` with small changes to make it shorter and more efficient. I've also added a docstring to explain the purpose of the function.

```python
def priority_v2(k: int, n: int) -> float:
    """Returns the priority with which to add `k` to the Salem-Spencer set of size `n`.

    The priority is based on the number of unique remainders when adding `k` to each integer in the range `[0, n)`.
    A higher priority is given to integers with fewer unique remainders.

    Args:
        k (int): The integer for which to determine the priority.
        n (int): The size of the Salem-Spencer set.

    Returns:
        float: The priority value.
    """
    return sum(i != (k + i) % n for i in range(n)) / n
```

Changes made:

1. Removed the unnecessary set creation and used a generator expression instead.
2. Simplified the calculation of the priority by using a sum and an `if` condition to check if the remainder is unique.
3. Updated the docstring to better explain the purpose of the function and its arguments.