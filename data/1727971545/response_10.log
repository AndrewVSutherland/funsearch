Here's an improved version of `priority_v1` that considers the number of elements in the Salem-Spencer set that are coprime with `k`. This version uses the `math.gcd` function from the `math` library to calculate the greatest common divisor.

```python
import math

def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  coprime_count = sum(1 for j in range(1, n+1) if math.gcd(k, j) == 1)
  return coprime_count / n
```

This version of `priority_v1` should provide a better estimate of the priority for adding `k` to the Salem-Spencer set, as it considers the number of elements that `k` is coprime with. The priority is calculated as the ratio of coprime elements to the total number of possible elements `n`.

To further improve the function, you could consider additional factors, such as the number of elements in the set that are multiples of `k`, or the distribution of elements in the set relative to `k`. However, these improvements would make the function more complex and potentially less efficient.