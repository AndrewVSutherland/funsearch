"""Finds large cap sets.

On every iteration, improve priority_v1 over the priority_vX methods from previous iterations.
Make only small changes.
Try to make the code short.
"""
import itertools

import numpy as np

import funsearch


@funsearch.run
def priority_v0(el: tuple[int, ...], n: int) -> float:
  """Returns the priority with which we want to add `element` to the cap set.
  el is a tuple of length n with values 0-2.
  """
  """Improved version of `priority_v4`.
  The priority is calculated as the total count of 1s multiplied by 0.1,
  the total count of 2s multiplied by 0.01, and added to the total count of 0s.
  However, if the total count of 2s is greater than 2, the total count of 1s is greater than n//2,
  or the total count of 0s is less than n//4, the priority is set to 0.
  Additionally, if the total count of 1s is less than n//4, the priority is reduced by 0.05.
  """
  count_0 = el.count(0)
  count_1 = el.count(1)
  count_2 = el.count(2)
  if count_2 > 2 or count_1 > n // 2 or count_0 < n // 4:
    return 0
  priority = count_0 + count_1 * 0.1 + count_2 * 0.01
  if count_1 < n // 4:
    priority -= 0.05
  return priority


def priority_v1(el: tuple[int, ...], n: int) -> float:
  """Improved version of `priority_v0`."""
  """Improved version of `priority_v4`.
  The priority is calculated as the total count of 1s multiplied by 0.1,
  the total count of 2s multiplied by 0.01, and added to the total count of 0s.
  However, if the total count of 2s is greater than 2, the total count of 1s is greater than n//2,
  or the total count of 0s is less than n//4, the priority is set to 0.
  Additionally, if the total count of 1s is less than n//4, the priority is reduced by 0.05.
  """
  count_0 = el.count(0)
  count_1 = el.count(1)
  count_2 = el.count(2)
  if count_2 > 2 or count_1 > n // 2 or count_0 < n // 4:
    return 0
  priority = count_0 + count_1 * 0.1 + count_2 * 0.01
  if count_1 < n // 4:
    priority -= 0.05
  return priority


def priority_v2(el: tuple[int, ...], n: int) -> float:
  """Improved version of `priority_v1`."""

