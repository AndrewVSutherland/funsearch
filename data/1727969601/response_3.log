"""Improved version of `priority_v0`."""
def priority_v1(k: int, n: int) -> float:
    """Returns the priority with which we want to add `element` to the salem-spencer set.
    n is the number of possible integers, and k is the integer we want to determine priority for.
    """
    # We only need to consider pairs (i, j) where i < j
    # This reduces the number of iterations by approximately half
    counts = np.zeros(n * 2)
    for i in range(1, n):
        for j in range(i + 1, n + 1):
            counts[i + j] += 2  # Since we have (i, j) and (j, i), we add 2 to the count
    return counts[k]


# Test the function
print(priority_v1(10, 20))  # Example usage

"""
In the improved `priority_v1` function, we only consider pairs (i, j) where i < j.
This reduces the number of iterations by approximately half, making the function more efficient.
We also add 2 to the count for each pair, since we have both (i, j) and (j, i).
"""