Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`, and the number of multiples of `k` within the range `[1, n]`. This version is shorter and makes small changes to `priority_v0`.

```python
def priority_v1(k: int, n: int) -> float:
  """Improved version of `priority_v0`."""
  remainders = set(k % i for i in range(1, n + 1))
  multiples = sum(i for i in range(1, n + 1) if i % k == 0)
  return len(remainders) + multiples
```

This version calculates the priority as the sum of the number of unique remainders and the number of multiples of `k` within the range `[1, n]`. This should provide a better estimate for the priority of adding `k` to the Salem-Spencer set.

To further improve the function, you could consider additional factors, such as the number of perfect powers or the distribution of prime factors of `k`. However, keep in mind that making the function too complex might make it harder to understand and maintain.