Here's an improved version of `priority_v1` that considers the frequency of multiples of `k` up to `n` and their sum, making it more representative of the Salem-Spencer set's growth. I've also made the code shorter by using a generator expression instead of `np.count_nonzero`.

```python
def priority_v2(k: int, n: int) -> float:
  """Improved version of `priority_v1`."""
  freq = sum(i % k == 0 for i in range(n))
  return freq / n + (n // k) / n
```

This version of `priority_v2` considers both the frequency of multiples of `k` and the average number of multiples of `k` within the range `[1, n]`. This should provide a better estimate for the priority of adding `k` to the Salem-Spencer set.

To further improve the function, you could consider the distribution of multiples of `k` within the range `[1, n]` and their impact on the Salem-Spencer set's growth. However, keep in mind that making only small changes as per your instructions.