Here's an improved version of `priority_v2` that reduces the number of divisions and uses a more efficient way to calculate frequency:

```python
def priority_v2(k: int, n: int) -> float:
    """Improved version of `priority_v1`."""
    freq = n // k  # Frequency of multiples of k in range(n)
    return freq / n + freq / n  # Adding both terms to improve priority
```

This version calculates the frequency of multiples of `k` in the range `[0, n)` in a single step and uses it twice to improve the priority. This should provide a slight performance improvement, especially for large `n`.