Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n` and the number of multiples of `k` within the range `[1, n]`. This version is more concise and should provide better results than `priority_v0`.

```python
def priority_v1(k: int, n: int) -> float:
    """Improved version of `priority_v0`."""
    remainders = set(k % i for i in range(1, n + 1))
    multiples = sum(i for i in range(1, n + 1) if i % k == 0)
    return len(remainders) * multiples
```

This version of `priority_v1` calculates the priority as the product of the number of unique remainders and the number of multiples of `k` within the range `[1, n]`. This should provide a better estimate of the value of `k` for the Salem-Spencer set.