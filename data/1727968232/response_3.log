Here's an improved version of `priority_v1` that considers the number of unique remainders when dividing `k` by `n`. This is a small change that should improve the priority calculation. I've also added some type hints and a docstring for better readability.

```python
from typing import List

def priority_v1(k: int, n: int) -> float:
    """Returns the priority with which we want to add `k` to the Salem-Spencer set.
    n is the number of possible integers, and k is the integer we want to determine priority for.
    The priority is based on the number of unique remainders when dividing `k` by `n`.
    """
    remainders = set(k % i for i in range(1, n + 1))
    return len(remainders) / n
```

This version of `priority_v1` calculates the priority as the ratio of unique remainders to `n`. This should provide a better estimate of the usefulness of adding `k` to the Salem-Spencer set, as it considers the diversity of remainders generated by `k`, which is a key property of Salem-Spencer sets.

To further improve the function, you could consider other factors, such as the distribution of remainders or the frequency of each remainder. However, keep in mind that the goal is to make small changes on each iteration, so start with this version and build upon it gradually.